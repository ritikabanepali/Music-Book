{"ast":null,"code":"var _jsxFileName = \"/Users/ritikabanepali/Full Spotify Project/frontend/src/pages/HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport apiClient from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [albums, setAlbums] = useState([]); // State for storing album results\n\n  const handleSearch = async e => {\n    e.preventDefault();\n    try {\n      // We will now always search for the 'album' type\n      const response = await apiClient.get(`/spotify/search/?q=${query}&type=album`);\n      // The response from Spotify for an album search is under the 'albums' key\n      setAlbums(response.data.albums.items);\n    } catch (error) {\n      console.error(\"Search failed:\", error);\n      alert(\"Search failed. Please check the console for details.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search for Albums on Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Search for an album...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: albums.map(album => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/album/${album.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [album.name, \" by \", album.artists.map(a => a.name).join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)\n      }, album.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(HomePage, \"/wZmCrbeKpaaRzPOWzz4/qeeero=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","Link","apiClient","jsxDEV","_jsxDEV","HomePage","_s","query","setQuery","albums","setAlbums","handleSearch","e","preventDefault","response","get","data","items","error","console","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","style","marginTop","map","album","to","id","name","artists","a","join","_c","$RefreshReg$"],"sources":["/Users/ritikabanepali/Full Spotify Project/frontend/src/pages/HomePage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport apiClient from '../api';\n\nfunction HomePage() {\n    const [query, setQuery] = useState('');\n    const [albums, setAlbums] = useState([]); // State for storing album results\n\n    const handleSearch = async (e) => {\n        e.preventDefault();\n        try {\n            // We will now always search for the 'album' type\n            const response = await apiClient.get(`/spotify/search/?q=${query}&type=album`);\n            // The response from Spotify for an album search is under the 'albums' key\n            setAlbums(response.data.albums.items);\n        } catch (error) {\n            console.error(\"Search failed:\", error);\n            alert(\"Search failed. Please check the console for details.\");\n        }\n    };\n\n    return (\n        <div>\n            <h1>Search for Albums on Spotify</h1>\n            <form onSubmit={handleSearch}>\n                <input \n                    type=\"text\" \n                    value={query} \n                    onChange={(e) => setQuery(e.target.value)} \n                    placeholder=\"Search for an album...\" \n                />\n                <button type=\"submit\">Search</button>\n            </form>\n\n            <div style={{ marginTop: '20px' }}>\n                {/* Map over the albums state to display results */}\n                {albums.map((album) => (\n                    <div key={album.id}>\n                        {/* Each result links to the correct album detail page */}\n                        <Link to={`/album/${album.id}`}>\n                            <p>{album.name} by {album.artists.map(a => a.name).join(', ')}</p>\n                        </Link>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}